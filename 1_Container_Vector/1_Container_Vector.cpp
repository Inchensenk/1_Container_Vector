// 1_Container_Vector.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//https://www.youtube.com/watch?v=1cKvMZOJeeE

#include <iostream>
#include <vector>
using namespace std;
int main()
{
	setlocale(LC_ALL, "RU");
	//так как вектор является прокаченным динамическим массивов то можно заполнить его так же как и в массиве
	//vector<int> myVector = { 50,125,10,25 };
	//создание вектора с 20 элементами проинициализированные нулями
	//vector<int> myVector(20);
	//создание вектора с 20 элементами проинициализированные числом 55
	//vector<int> myVector(20,55);
	vector<int> myVector(20) ;
	//резервирование места под 100 элеменнтов для капасити
	myVector.reserve(100);
	//добавление элементов в конец вектора
	myVector.push_back(10);
	myVector.push_back(15);
	myVector.push_back(20);
	myVector.push_back(40);
	//можно перезаписывать элементы вектора как в массиве
	myVector[0] = 1000;
	//обращение к элементу вектора, наподобие как с оператором индексации [] (myVector[1]), 
	//но есть отличие в реализации, когда мы используем оператор [] мы не выполняем проверку границ массива
	//просто идем в область памяти, где предположительно находится элемент под этим индексом и берем от туда данный и буть что будет
	//а метод at() проверяет вышли мы за границы или нет и при выходе за границы метод at выдаст ошибку
	//вектор выдаст свое собственное исключение out of range
	//из за этой проверки вектор работает медленнее динамического массива
	cout << myVector.at(1) << endl;

	try
	{
		cout << myVector.at(10) << endl;
	}
	catch (const std::out_of_range& ex)
	{
		cout << ex.what() << endl << endl;
	}
	

	//для вектора хранить колличество элементов в массиве не нужно, в векторе есть метод size()
	cout << "колличество элементов в векторе " << myVector.size() << endl;

	for (size_t i = 0; i < myVector.size(); i++)
	{
		cout << myVector[i] << endl;
	}
	//очистка последнего элемента вектора
	myVector.pop_back();
	cout << "pop_back() колличество элементов в векторе " << myVector.size() << endl;
	//очистка вектора от всех элементов
	myVector.clear();
	cout << "clear() колличество элементов в векторе " << myVector.size() << endl;
	//capacity() возвращает целочисленную переменную (вместимость или емкость вектора) сколько элементов могут в нем поместиться
	cout<< "capacity() вектора "<<myVector.capacity()<<endl;
	//проверка на наличие элементов в векторе
	//если тру то нет элементов
	//если фолс то в векторе есть элементы
	cout << myVector.empty();

	//аналогично обьявлению вектора с инициализацией в конструкторе
	myVector.resize(20, 60);
}

